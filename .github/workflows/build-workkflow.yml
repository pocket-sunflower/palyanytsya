name: Build Workflow
on:
  push:
    branches:
      - feature/ci-test
    paths-ignore:
      - "executables/**"
      - "docs/**"
      - "README.md"
jobs:
  build-for-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup Python 3.10.2
        uses: actions/setup-python@v3
        with:
          python-version: '3.10.2'
      - name: Install requirements
        run: python3 -m pip install -r requirements.txt
#      - name: Go to PyInstaller builds folder
#        run: cd build_scripts_PyInstaller
      - name: Build Linux distro with PyInstaller
        working-directory: build_scripts_PyInstaller
        run: python3 -m build_for_linux.py
#  build-for-windows:
#    runs-on: windows-latest
#    steps:
#      - run: echo "Hello Windows"
#  build-for-macos:
#    runs-on: macos-latest
#    steps:
#      - run: echo "Hello macOS"
  deploy-dockers:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
#      - name: Setup Docker
#        uses: actions/setup-python@v3.10
      - name: Login to ghcr.io
        uses: docker/login-action@v1.14.1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: List before
#        run: ls
#      - name: Go to Docker builds folder
#        run: cd build_scripts_Docker
#      - name: List after
#        run: ls
      - name: Build the containers
        working-directory: build_scripts_Docker
        run: bash build_dockers.sh
      - name: Publish the containers
        working-directory: build_scripts_Docker
        run: bash push_dockers.sh ${{ secrets.GITHUB_TOKEN }}
#      - name: Install requirements
#        run: python3 -m pip install -r requirements.txt
#      - name: Go into builds folder
#        run: cd build_scripts_PyInstaller
#      - name: Build Linux distro with PyInstaller
#        run: python3 -m build_for_linux.py
